﻿<!-- Views/Product/Details.cshtml -->
@model online_store_app.Models.Product
@{
    ViewData["Title"] = Model.Name;
}

@using System.Text
@using Microsoft.AspNetCore.Html

<style>
    .rating-stars {
        color: #ffd700; /* Set the color of the stars to yellow */
    }
</style>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a class="link-primary link-offset-2 link-underline-opacity-0 link-underline-opacity-100-hover"
               asp-controller="Home" asp-action="Index">Home</a>
        </li>
        <li class="breadcrumb-item">
            <a class="link-primary link-offset-2 link-underline-opacity-0 link-underline-opacity-100-hover"
               asp-controller="Category" asp-action="@Model.Category.Name">@Model.Category.Name</a>
        </li>
        <li class="breadcrumb-item fw-bolder active" aria-current="page">Product @Model.EAN</li>
    </ol>
</nav>

<div class="container">
    <div class="row">
        <!-- Image Section -->
        <div class="col-lg-9 align-items-center d-flex justify-content-center">
            <img src="@Model.ImageUrl" class="" alt="Product Image" style="height:600px;object-fit:contain;">
        </div>
        <!-- Right Side - Details -->
        <div class="col-lg-3">
            <div class="row">
                <!-- Price -->
                <div class="col-lg-12 mb-3">
                    <div class="card h-100">
                        <div class="card-body">
                            <p class="card-subtitle fs-5">Price vat 24%</p>
                            <h5 class="card-title fs-1 detail-card-title">
                                @{
                                    double adjustedPrice = Model.AdjustedPrice;
                                }
                                @if (Model.IsOnSale)
                                {
                                    <span class="text-danger"><s>@Model.Price</s></span>
                                    <br />
                                    <span class="text-success">
                                        @string.Format("{0:0.00}", adjustedPrice)
                                        (@string.Format("{0:0} % Off", Model.SalePercentage))
                                    </span>
                                }
                                else
                                {
                                    <span>@Model.Price</span>
                                }
                            </h5>
                        </div>
                    </div>
                </div>

                <div class="col-lg-12 mb-3">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-text">Available in stock: @Model.Quantity</h5>
                            <form method="post" asp-action="AddToCart" asp-controller="ShoppingCart">
                                <input type="hidden" name="ean" value="@Model.EAN" />
                                <button type="submit" class="btn btn-info">Add to Cart</button>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Product Code -->
                <div class="col-lg-12 mb-3">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">EAN:</h5>
                            <p class="card-text">@Model.EAN</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Product Description -->
        <div class="col-lg-12 mb-3">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">Product Description</h5>
                    <p class="card-text fs-4">@Model.Description</p>
                </div>
            </div>
        </div>

        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            <div class="col-lg-12 mb-3">
                <h2>Product Reviews</h2>
                @foreach (var review in Model.Reviews)
                {
                    <div class="review-box">
                        <p>Rating: @review.Rating out of 5</p>
                        <p>Title: @review.Title</p>
                        <p>Comment: @review.Content</p>
                        <p>Date: @review.CreatedAt</p>
                    </div>
                }

                <!-- Calculate and display the average rating using stars -->
                @{
                    double averageRating = Model.Reviews.Average(r => r.Rating);
                    int roundedAverageRating = (int)Math.Round(averageRating);
                }

                <div class="average-rating">
                    <p>Average Rating: <span class="rating-stars">@GetStarRating(roundedAverageRating)</span></p>
                </div>
            </div>
        }
        else
        {
            <div class="col-lg-12 mb-3">
                <p>No reviews for this product yet.</p>
            </div>
        }

        <!-- Add the review link at the end of the view -->
        <div class="col-lg-12 mb-3">
            <a asp-controller="Product" asp-action="Review" asp-route-productId="@Model.Id" asp-route-ean="@Model.EAN">Review this product</a>
        </div>
    </div>
</div>

@functions {
    // Function to get the star rating HTML based on the numeric rating
    public HtmlString GetStarRating(int rating)
    {
        StringBuilder stars = new StringBuilder();
        for (int i = 1; i <= 5; i++)
        {
            if (i <= rating)
            {
                // Display a yellow star for each full rating
                stars.Append("<i class='bi bi-star-fill rating-stars'></i>");
            }
            else
            {
                // Display a grey star for the remaining empty ratings
                stars.Append("<i class='bi bi-star rating-stars'></i>");
            }
        }
        return new HtmlString(stars.ToString());
    }
}